@using dOSCEngine.Services.Connectors
@using dOSCEngine.Services.Connectors.Activity.Pulsoid
@using dOSCEngine.Services.User
@using Microsoft.AspNetCore.Components.Forms
@using dOSC.Client.Components.Modals
@using OSCService = dOSC.Client.Services.Connectors.Hub.OSC.OSCService
<table class="third-party-table">
    <thead>
        <tr>
            <th style="width:20%;">Integration</th>
            <th style="width:55%;">Description</th>
            <th style="width:10%;">Status</th>
            <th style="width:15%;"></th>
        </tr>
    </thead>
    <tbody>
        <SettingsTableRow Service="_OSC" OnEdit="OnEditCallback" />
        <SettingsTableRow Service="_Pulsoid" OnEdit="OnEditCallback" />

    </tbody>
</table>

<ModalV2 @ref=EditModal Title=@EditModalTitle OnClose="OnEditModalClose">
    <Body>
        @{
            if(SelectedConnector != null)
            {
                switch (SelectedConnector.ServiceName.ToLower())
                {
                    case "osc":
                        <OSCSettings Setting="@((OSCSetting)Setting)" OnValidSubmit="OnValidSubmit" />
                        break;
                    case "pulsoid":
                        <PulsoidSettings Setting="@((PulsoidSetting)Setting)" OnValidSubmit="OnValidSubmit" />
                        break;
                }
            }
            
        }
    </Body>
    <Footer>
        <button form="setting-form" inputmode="button" class="dosc-button primary"> Save </button>
    </Footer>

</ModalV2>




@code {
    [Inject]
    private OSCService _OSC {get; set; }
    [Inject]
    private PulsoidService _Pulsoid {get; set; }

    [Parameter]
    public EventCallback<ConnectorBase> OnEdit { get; set; }

    private ModalV2? EditModal;
    private ConnectorBase? SelectedConnector;
    private string EditModalTitle = string.Empty;
    private SettingBase? Setting;
    private int _PulsoidPort = 0;

    private void OnEditCallback(ConnectorBase connector )
    {
        Setting = connector.GetSetting();
        SelectedConnector = connector;
        EditModalTitle = $"{SelectedConnector?.ServiceName ?? string.Empty} Configuration";
        EditModal?.Open();

    }

    private void OnEditModalClose()
    {

        Setting = null;
        EditModalTitle = string.Empty;
        SelectedConnector = null;

    }

    private void OnValidSubmit(OSCSetting setting)
    {
        _OSC.UpdateSetting(setting);
        _OSC.LoadSetting();
        _OSC.RestartService();
        OnEditModalClose();
        EditModal.Close();
        Setting = null;
        EditModalTitle = string.Empty;
        SelectedConnector = null;
    }

    private void OnValidSubmit(PulsoidSetting setting)
    {
        _Pulsoid.UpdateSetting(setting);
        _Pulsoid.LoadSetting();
        _Pulsoid.RestartService();
        OnEditModalClose();
        EditModal.Close();
        Setting = null;
        EditModalTitle = string.Empty;
        SelectedConnector = null;
    }
}