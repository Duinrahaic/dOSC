@using System.ComponentModel
@using System.ComponentModel.DataAnnotations
@using dOSC.Shared.Models.Wiresheet
<NodePropertyEditor Setting="@Setting" OnValidSubmit="Update">
    <Fields>
        @if (Setting != null)
        {
            <hr/>
            <div class="dosc-form-item">
                <label>Rolling Average Size: <span style="color:red;">*</span></label>
                <ValidationMessage For="@(() => Setting.QueueSize)"/>
                <InputNumber dataType="number" placeholder="1" @bind-Value=@Setting.QueueSize/>
            </div>
        }


    </Fields>
</NodePropertyEditor>


@code {
    [CascadingParameter] public BaseNode? Node { get; set; }
    private NodeSetting? Setting;

    [Parameter] public EventCallback Updated { get; set; }


    protected override void OnParametersSet()
    {
        if (Node != null)
        {
            Setting = new NodeSetting(Node);
        }
    }


    private class NodeSetting : BaseNodeSetting
    {
        [DisplayName("Queue Size")]
        [Range(1, 100, ErrorMessage = "Queue size must be between 1 and 100")]
        [Required]
        public int QueueSize { get; set; } = 1;

        public NodeSetting(BaseNode Node)
        {
            QueueSize = Node.QueueSize;
            DisplayName = Node.DisplayName;
            Name = Node.Name;
        }
    }

    public void Update(BaseNodeSetting Setting)
    {
        var UpdatedSettings = (NodeSetting)Setting;

        if (Node != null)
        {
            Node.Properties.SetProperty(EntityPropertyEnum.MaxQueue, UpdatedSettings.QueueSize);
            Node.DisplayName = UpdatedSettings.DisplayName;
        }

        if (Updated.HasDelegate)
        {
            Updated.InvokeAsync();
        }
    }

}