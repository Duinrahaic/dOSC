@using ServiceBundle = dOSC.Client.Services.ServiceBundle
@implements IDisposable

<div class="block-container-header">
    @if (string.IsNullOrEmpty(Node.TextIcon))
    {
        <div class="block-container-header-icon @Node.Icon"></div>
    }
    else
    {
        <div class="block-container-header-icon text">@Node.TextIcon</div>
    }
    <div class="block-container-header-title" @key="@Node.DisplayName"> @Node.DisplayName </div>
    @if (SB != null)
    {
        <div class="block-container-header-setting icon-cog " @onclick="OpenSettings"></div>
    }
</div>

@code {
    [Parameter] public BaseNode Node { get; set; } = null!;
    [Inject] public ServiceBundle? SB { get; set; }

    protected override void OnParametersSet()
    {
        Node.OnHeaderUpdateRequest += OnVisualUpdateRequest;
    }

    private void OnVisualUpdateRequest()
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        Node.OnHeaderUpdateRequest -= OnVisualUpdateRequest;
    }


    private void OpenSettings()
    {
        SB?.EditNode(Node);
    }

}