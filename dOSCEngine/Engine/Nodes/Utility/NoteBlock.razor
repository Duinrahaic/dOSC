@using dOSCEngine.Services
<div @key="@Node" id="@Node.Guid" class="block-note-container @Node.NoteColor @(Node.Selected ? "selected" : string.Empty)">
      <div class="block-container-header">    
            @if (string.IsNullOrEmpty(Node.TextIcon))
            {
                <div class="block-container-header-icon icon @Node.Icon"></div>
            }
            else
            {
                <div class="block-container-header-icon text">@Node.TextIcon</div>
            }
            <div class="block-container-header-title"> @Node.DisplayName </div>
            @if(SB != null)
            {
                <div class="block-container-header-setting icon-cog " @onclick="OpenSettings"></div>
    
            }
        </div>
        <div class="block-container-body-container">
            <div class="note-container" @key="@Node.Note">
                @Node.Note
            </div>
        </div>
</div>
@code {
    [Parameter] public NoteNode Node { get; set; } = null!;
    [Inject] public ServiceBundle? SB { get; set; }
    
    private void OpenSettings()
    {
        SB?.EditNode(Node);

    }
    protected override void OnParametersSet()
    {
        Node.OnVisualUpdateRequest += OnVisualUpdateRequest;
    }
    
    private void OnVisualUpdateRequest()
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        Node.OnVisualUpdateRequest -= OnVisualUpdateRequest;
    }
}