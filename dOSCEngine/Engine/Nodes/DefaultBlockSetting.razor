@using System.ComponentModel.DataAnnotations;
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel;
@using dOSCEngine.Components.UI
@using dOSCEngine.Engine.Units
@using dOSCEngine.Utilities;

<NodePropertyEditor Setting="@Setting" OnValidSubmit="Update" >

</NodePropertyEditor>



@code{
    [Parameter]
    public BaseNode? Node { get; set; }
    private NodeSetting? Setting;

    [Parameter] public EventCallback Updated { get; set; }



    protected override void OnParametersSet()
    {
        if (Node != null)
        {
            Setting = new NodeSetting(Node);
        }
    }


    private class NodeSetting : BaseNodeSetting
    {

        public List<TimeUnits> UnitOptions => ListUtilities.GetEnumValues<TimeUnits>();

        public NodeSetting(BaseNode Node)
        {
            DisplayName = Node.GetProperty<string>(PropertyType.DisplayName);
            Name = Node.GetProperty<string>(PropertyType.Name);
        }


    }

    public void Update(BaseNodeSetting Setting)
    {
        var UpdatedSettings = (NodeSetting)Setting;

        if (Node != null)
        {
            Node.SetProperty(PropertyType.DisplayName, UpdatedSettings.DisplayName);
        }

        if (Updated.HasDelegate)
        {
            Updated.InvokeAsync();
        }
    }

}